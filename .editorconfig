root = true

[*]
charset = utf-8
end_of_line = lf
insert_final_newline = true
trim_trailing_whitespace = true

[*.{cs,csx,vb,vbx}]
indent_style = space
indent_size = 4

[*.{xml,config,props,targets,nuspec,resx,ruleset,vsixmanifest,vsct}]
indent_size = 2

[*.{json,js,jsx,ts,tsx,yml,yaml}]
indent_size = 2

# C# code style settings
[*.cs]

# Documentation requirements
dotnet_diagnostic.CS1591.severity = warning  # Missing XML comment for publicly visible type or member

# Language version (maximum for .NET Framework 4.7.2)
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async:suggestion

# Use latest C# features (.NET Framework 4.7.2 compatible)
csharp_style_var_for_built_in_types = true:suggestion
csharp_style_var_when_type_is_apparent = true:suggestion
csharp_style_var_elsewhere = false:suggestion

# Pattern matching
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion

# Null checking
csharp_style_throw_expression = true:suggestion
csharp_style_conditional_delegate_call = true:suggestion

# Expression settings
csharp_prefer_braces = true:warning
csharp_style_expression_bodied_methods = false:suggestion
csharp_style_expression_bodied_constructors = false:suggestion
csharp_style_expression_bodied_operators = false:suggestion
csharp_style_expression_bodied_properties = true:suggestion
csharp_style_expression_bodied_indexers = true:suggestion
csharp_style_expression_bodied_accessors = true:suggestion

# Inline variable declarations
csharp_style_inlined_variable_declaration = true:suggestion

# 'new' expressions
csharp_style_implicit_object_creation_when_type_is_apparent = true:suggestion

# using directives
dotnet_sort_system_directives_first = true
dotnet_separate_import_directive_groups = false

# Naming conventions
dotnet_naming_rule.interfaces_should_be_prefixed_with_i.severity = warning
dotnet_naming_rule.interfaces_should_be_prefixed_with_i.symbols = interface
dotnet_naming_rule.interfaces_should_be_prefixed_with_i.style = prefixed_with_i

dotnet_naming_rule.types_should_be_pascal_case.severity = warning
dotnet_naming_rule.types_should_be_pascal_case.symbols = types
dotnet_naming_rule.types_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.non_field_members_should_be_pascal_case.severity = warning
dotnet_naming_rule.non_field_members_should_be_pascal_case.symbols = non_field_members
dotnet_naming_rule.non_field_members_should_be_pascal_case.style = pascal_case

# Symbol definitions
dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected

dotnet_naming_symbols.types.applicable_kinds = class, struct, interface, enum
dotnet_naming_symbols.types.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected

dotnet_naming_symbols.non_field_members.applicable_kinds = property, event, method
dotnet_naming_symbols.non_field_members.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected

# Style definitions
dotnet_naming_style.pascal_case.capitalization = pascal_case

dotnet_naming_style.prefixed_with_i.required_prefix = I
dotnet_naming_style.prefixed_with_i.capitalization = pascal_case

# .NET code style
dotnet_style_qualification_for_field = false:suggestion
dotnet_style_qualification_for_property = false:suggestion
dotnet_style_qualification_for_method = false:suggestion
dotnet_style_qualification_for_event = false:suggestion

dotnet_style_predefined_type_for_locals_parameters_members = true:suggestion
dotnet_style_predefined_type_for_member_access = true:suggestion

dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_object_initializer = true:suggestion
dotnet_style_collection_initializer = true:suggestion

# Settings for future version compatibility
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion
dotnet_style_prefer_auto_properties = true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment = true:suggestion
dotnet_style_prefer_conditional_expression_over_return = true:suggestion

# File headers
file_header_template = unset

# IDE診断
dotnet_diagnostic.IDE0003.severity = warning  # Remove this or Me qualification
dotnet_diagnostic.IDE0009.severity = warning  # Add this or Me qualification
dotnet_diagnostic.IDE0011.severity = warning  # Add braces
dotnet_diagnostic.IDE0017.severity = suggestion  # Use object initializers
dotnet_diagnostic.IDE0028.severity = suggestion  # Use collection initializers
dotnet_diagnostic.IDE0032.severity = suggestion  # Use auto property
dotnet_diagnostic.IDE0034.severity = suggestion  # Simplify 'default' expression
dotnet_diagnostic.IDE0037.severity = suggestion  # Use inferred member name
dotnet_diagnostic.IDE0039.severity = suggestion  # Use local function instead of lambda
dotnet_diagnostic.IDE0041.severity = suggestion  # Use 'is null' check
dotnet_diagnostic.IDE0044.severity = warning  # Add readonly modifier
dotnet_diagnostic.IDE0045.severity = suggestion  # Use conditional expression for assignment
dotnet_diagnostic.IDE0046.severity = suggestion  # Use conditional expression for return
dotnet_diagnostic.IDE0054.severity = suggestion  # Use compound assignment
dotnet_diagnostic.IDE0056.severity = suggestion  # Use index operator
dotnet_diagnostic.IDE0057.severity = suggestion  # Use range operator
dotnet_diagnostic.IDE0058.severity = none  # Remove unnecessary expression value
dotnet_diagnostic.IDE0059.severity = warning  # Remove unnecessary value assignment
dotnet_diagnostic.IDE0060.severity = warning  # Remove unused parameter
dotnet_diagnostic.IDE0061.severity = suggestion  # Use expression body for local functions
dotnet_diagnostic.IDE0062.severity = suggestion  # Make local function static
dotnet_diagnostic.IDE0063.severity = suggestion  # Use simple using statement
dotnet_diagnostic.IDE0065.severity = warning  # using directive placement
dotnet_diagnostic.IDE0066.severity = suggestion  # Use switch expression
dotnet_diagnostic.IDE0071.severity = suggestion  # Simplify interpolation
dotnet_diagnostic.IDE0075.severity = suggestion  # Simplify conditional expression
dotnet_diagnostic.IDE0078.severity = suggestion  # Use pattern matching
dotnet_diagnostic.IDE0083.severity = suggestion  # Use pattern matching (not operator)
dotnet_diagnostic.IDE0090.severity = suggestion  # Simplify new expression
dotnet_diagnostic.IDE0100.severity = warning  # Remove unnecessary equality operator
dotnet_diagnostic.IDE0110.severity = suggestion  # Remove unnecessary discard
dotnet_diagnostic.IDE0120.severity = suggestion  # Simplify LINQ expression
dotnet_diagnostic.IDE0130.severity = suggestion  # Namespace does not match folder structure
